services:
  testrunner:
    image: $DEV_IMAGE_TAG
    environment:
      WORK_DIR: $PWD
      POSTGRES_HOST: dmt_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dmt
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: dmt.default
    depends_on:
      dmt_db:
        condition: service_healthy
      # holmes:
      #   condition: service_started
      kafka:
        condition: service_started
      # shumway:
      #   condition: service_started
    working_dir: $PWD

  dmt_db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dmt
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Apache Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:$CONFLUENT_PLATFORM_VERSION
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:$CONFLUENT_PLATFORM_VERSION
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka UI for development and debugging
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

  # For test purposes
  # holmes:
  #   image: ghcr.io/valitydev/holmes:sha-eef05a3
  #   volumes:
  #     - ./dmt_init.sh:/opt/holmes/dmt_init.sh
  #     - ./migrate_domain_config.py:/opt/holmes/migrate_domain_config.py
  #     - ./revision.txt:/opt/holmes/revision.txt
  #     - ./RevisionBig.txt:/opt/holmes/RevisionBig.txt
  #     - ./RevisionBigV2.txt:/opt/holmes/RevisionBigV2.txt
  #     - ./res.json:/opt/holmes/res.json

  # shumway:
  #   image: ghcr.io/valitydev/shumway:sha-658587c
  #   restart: unless-stopped
  #   depends_on:
  #     - shumway-db
  #   ports:
  #     - "8022"
  #   entrypoint:
  #     - java
  #     - -Xmx512m
  #     - -jar
  #     - /opt/shumway/shumway.jar
  #     - --spring.datasource.url=jdbc:postgresql://shumway-db:5432/shumway
  #     - --spring.datasource.username=postgres
  #     - --spring.datasource.password=postgres
  #     - --management.endpoint.metrics.enabled=false
  #     - --management.endpoint.prometheus.enabled=false
  #   healthcheck:
  #     disable: true

  # shumway-db:
  #   image: docker.io/library/postgres:13.10
  #   ports:
  #     - "5432"
  #   environment:
  #     - POSTGRES_DB=shumway
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
